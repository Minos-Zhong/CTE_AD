conda install fastqc multiqc -y
# 一：质控前的初看测序数据质量：fastqc与multiqc
# 1.激活专门用于RNAseq数据处理的小环境rna,进行fastqc与multiqc
conda activate zgy_1 #激活转录组测序数据处理的小环境
# 2.先进行fastqc
nohup fastqc -t 6 -o ./ SRR*.fastq.gz >qc.log &  
# 3.对fastqc后的zip数据进行multiqc
nohup multiqc ./*.zip -o ./ > ./multiqc.log &

# 二:trimmgalore质控
## 单端
ls *gz |while read id;do (nohup trim_galore  -q 25 --phred33 --length 36 --stringency 3 -o ./  $id & );done
## 双端
    # 文件分类
    ls | grep _1.fastq.gz > gz1
    ls | grep _2.fastq.gz > gz2
    paste gz1 gz2 > config
    
    vim trim.sh
    
    # trim.sh中的代码
    dir=/hwfs2/share/Project/Test/ZZYTEST1/zgy_project/tbi/CTE_AD/PRJEB28518/01_trimmed
    cat config |while read id
    do
          arr=${id}
          fq1=${arr[0]}
          fq2=${arr[1]}
          nohup trim_galore -q 25 --phred33 --length 36 --stringency 3 --paired -o $dir $fq1 $fq2 &
    done
    
    # 运行脚本
    bash trim.sh
#三:质控后数据也需要用fastqc与multiqc看看质控效果
# 01批量fastqc
nohup fastqc -t 12 -o ./ SRR*_trimmed.fq.gz > qc_trimmed.log & 
# 02开始multiqc
nohup multiqc *trimmed_fastqc.zip -o ./ > ./multiqc_t.log &

##################################### 比对 #########################################
#参考基因组下载
# https://cloud.biohpc.swmed.edu/index.php/s/grcm38/download

wget https://genome-idx.s3.amazonaws.com/hisat/grch38_genome.tar.gz
tar -zxvf grch38_genome.tar.gz

##单端
ls *_trimmed.fq.gz|while read id;do 
nohup sh -c 
"hisat2 -p 2 -x /hwfs2/share/Project/Test/ZZYTEST1/zgy_project/00_ref/mm10/genome 
-U $id 2>${id%%_*}_mm10.log |
samtools sort -@ 2 -o /hwfs2/share/Project/Test/ZZYTEST1/zgy_project/ptsd/03_align/${id%%_*}.bam" & 
done


#### 查看挂起程序
ps -ef | grep nohup
####

## 双端
#!/usr/bin/bash
echo hostname: `hostname`
echo ==========start at : `date "+%Y-%m-%d %H:%M:%S"` ========== &&
cd /hwfs2/share/Project/Test/ZZYTEST1/zgy_project/tbi/CTE_AD/PRJEB28518/01_trimmed && \
dir=/hwfs2/share/Project/Test/ZZYTEST1/zgy_project/tbi/CTE_AD/PRJEB28518/02_align/ \

ls *_1.fq.gz | cut -d "_" -f 1 |while read id;do 
/nis_home/zhaozhiyong/mysoft/miniconda3/envs/zgy_1/bin/hisat2 -p 8 \
-x /hwfs2/share/Project/Test/ZZYTEST1/zgy_project/00_ref/human/grch38/genome \
-1 ${id}_1_val_1.fq.gz -2 ${id}_2_val_2.fq.gz  \
-S "${dir}${id%%_*}.sam" > "${dir}${id%%_*}.log" 2>&1
done

ls *.sam| cut -d "." -f 1 |while read id ;do 
/nis_home/zhaozhiyong/mysoft/miniconda3/envs/zgy_1/bin/samtools sort -@ 6 -o "${dir}${id%%.*}.bam" ${id}
done

echo ==========end at : `date "+%Y-%m-%d %H:%M:%S"` ========== &&
echo Still_waters_run_deep 1>&2 &&ll
echo Still_waters_run_deep > /hwfs2/share/Project/Test/ZZYTEST1/zgy_project/tbi/CTE_AD/PRJEB28518/02_align/test.sh.sign


############################## 定量 ###################################
wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_45/gencode.v45.annotation.gtf.gz
gunzip gencode.v45.annotation.gtf.gz


##双端
# nohup featureCounts -T 6 -p -t exon -g gene_id  -a /hwfs2/share/Project/Test/ZZYTEST1/zgy_project/00_ref/human/gencode.v45.annotation.gtf \
# -o  /hwfs2/share/Project/Test/ZZYTEST1/zgy_project/tbi/CTE_AD/PRJEB28518/03_matrix/all.id.txt *bam 1>/hwfs2/share/Project/Test/ZZYTEST1/zgy_project/tbi/CTE_AD/PRJEB28518/03_matrix/counts.id.log 2>&1 &

nohup featureCounts -T 8 -p -t exon -g gene_id  -a /hwfs2/share/Project/Test/ZZYTEST1/zgy_project/00_ref/human/Homo_sapiens.GRCh38.111.gtf \
-o  /hwfs2/share/Project/Test/ZZYTEST1/zgy_project/tbi/CTE_AD/PRJEB28518/03_matrix/all_2.id.txt *bam 1>/hwfs2/share/Project/Test/ZZYTEST1/zgy_project/tbi/CTE_AD/PRJEB28518/03_matrix/counts_2.id.log 2>&1 &

########################### gene_id 转换 ##########################

vim gtf_geneid2symbol_Homo_sapiens.GRCh38.111.sh
#提取gtf注释文件中gene_id等与gene_name的对应关系,便于下游id转换
gtf="Homo_sapiens.GRCh38.111.gtf"

### gene_id to gene_name
grep 'gene_id' $gtf | awk -F 'gene_id \"' '{print $2}' |awk -F '\"' '{print $1}' >gene_id_tmp
grep 'gene_id' $gtf | awk -F 'gene_name \"' '{print $2}' |awk -F '\"' '{print $1}' >gene_name_tmp
paste gene_id_tmp gene_name_tmp >last_tmp
uniq last_tmp >g2s_Homo_sapiens.GRCh38.111.txt
rm *_tmp

### transcript_id to gene_name
grep 'transcript_id' $gtf | awk -F 'transcript_id \"' '{print $2}' |awk -F '\"' '{print $1}' >gene_id_tmp
grep 'transcript_id' $gtf | awk -F 'gene_name \"' '{print $2}' |awk -F '\"' '{print $1}' >gene_name_tmp
paste gene_id_tmp gene_name_tmp >last_tmp
uniq last_tmp >t2s_Homo_sapiens.GRCh38.111.txt
rm *_tmp
bash gtf_geneid2symbol_Homo_sapiens.GRCh38.111.sh
